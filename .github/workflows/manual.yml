# This is a basic workflow that is manually triggered

name: Check Terraform Plan for non-empty diff (changes present)

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Entity to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains of two jobs "terraform-exit-code-check" and "notify-on-change"
  terraform-exit-code-check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      terraform-exit-code: ${{ steps.plan.outputs.exitcode }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check out branch to runner
    - uses: actions/checkout@v2
    # Setup terraform; for more details see: https://github.com/marketplace/actions/hashicorp-setup-terraform
    - uses: hashicorp/setup-terraform@v2

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: arn:aws:iam::776406839915:role/github_actions_role
        role-session-name: terraformrunnersession
        aws-region: eu-central-1
        
    # Terraform reformat in standard style check
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    # Do the terraform init on the runner
    - name: Terraform Init
      id: init
      run: terraform init

    # Check if terraform configuration is valid
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true

    # Do the terraform planning
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -detailed-exitcode
      continue-on-error: true           # This is set to true, so it can be checked later; for more details see: https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context

    # Runs a single command using the runners shell
    - name: Check conclusion and outcome of terraform plan step
      run: echo "Hello ${{ github.event.inputs.name }}; after continue-on-error this is a ${{ steps.plan.conclusion }}; before continue-on-error this is a ${{ steps.plan.outcome }};"


  notify-on-change:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: terraform-exit-code-check

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check exit codes on Terraform Plan; Save it to env.SLACK_MESSAGE
    - name: Terraform Plan Succeeded with empty diff (no changes)
      id: slack-exit-code-0
      if: needs.terraform-exit-code-check.outputs.terraform-exit-code == 0
      run: echo "SLACK_MESSAGE=Terraform Plan Succeeded with empty diff; No changes;" >> $GITHUB_ENV

    - name: Terraform Plan Error
      id: slack-exit-code-1
      if: needs.terraform-exit-code-check.outputs.terraform-exit-code == 1
      run: echo "SLACK_MESSAGE=Terraform Plan Error;" >> $GITHUB_ENV

    - name: Terraform Plan Succeeded with non-empty diff (changes present)
      id: slack-exit-code-2
      if: needs.terraform-exit-code-check.outputs.terraform-exit-code == 2
      run: echo "SLACK_MESSAGE=Terraform Plan Succeeded with non-empty diff; Changes present;" >> $GITHUB_ENV


    # Ping on slack/email or some other way in the future                                       # https://docs.github.com/en/actions/learn-github-actions/expressions#operators
    - name: Check if there is message to send
      id: slack
      if: ${{ env.SLACK_MESSAGE != 'Terraform Plan Succeeded with empty diff; No changes;' }}   # Inform us only if Error or Changes present
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
            "text": "Terraform plan result",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ env.SLACK_MESSAGE }}\n${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
